#! /bin/bash -l

pipeuser=PIPEUSER
obsnum=OBSNUM

# If obsnum is a file, then we are in an array job
if [[ -f ${obsnum} ]]
then
    taskid=${SLURM_ARRAY_TASK_ID}
    jobid=${SLURM_ARRAY_JOB_ID}

    echo "obsfile ${obsnum}"
    obsnum=$(sed -n -e "${SLURM_ARRAY_TASK_ID}"p "${obsnum}")
    echo "uvflag obsid ${obsnum}"
else
    taskid=1
    jobid=${SLURM_JOB_ID}
fi

echo "jobid: ${jobid}"
echo "taskid: ${taskid}"

datadir=DATADIR
debug=DEBUG

function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
    exit "$1"
fi
}

track_task.py start --jobid="${jobid}" --taskid="${taskid}" --start_time="$(date +%s)"

cd "$datadir/${obsnum}" || exit 1
if [[ -z $debug ]]
then
    ms_flag_by_uvdist.py "${obsnum}.ms" DATA -a
else
    ms_flag_by_uvdist.py "${obsnum}.ms" CORRECTED_DATA -a 
fi

#Now we flag RFI using SSINS.
#if [[ ! -e ${obsnum}_flagged.ms ]]
#then
#    python /software/projects/mwasci/smantovanini/GLEAM-X-pipeline/gleam_x/bin/flagging_rfi.py --obsid ${obsnum} --directory ${datadir}/${obsnum}

#    if [[ ! -e ${obsnum}_flagged.ms ]]
#    then
#        echo Flagged .ms has not been generated. Something went wrong
#    else
#        mv ${obsnum}.ms/MWA* ${obsnum}_flagged.ms/
#        rm -r ${obsnum}.ms
#        cd ${obsnum}_flagged.ms

#        python /software/projects/mwasci/smantovanini/GLEAM-X-pipeline/gleam_x/bin/updating_ms.py --obsid ${obsnum} --directory ${datadir}/${obsnum}

#        cd ..
#        mv ${obsnum}_flagged.ms ${obsnum}.ms
#    fi
#fi

track_task.py finish --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"

