#! /bin/bash -l

pipeuser=PIPEUSER
obsnum=OBSNUM

df -h | grep /nvmetmp

# If obsnum is a file, then we are in an array job
#if [[ -f ${obsnum} ]]
#then
#    taskid=${SLURM_ARRAY_TASK_ID}
#    jobid=${SLURM_ARRAY_JOB_ID}

#    echo "obsfile ${obsnum}"
#    obsnum=$(sed -n -e "${SLURM_ARRAY_TASK_ID}"p "${obsnum}")
#    echo "uvflag obsid ${obsnum}"
#else
taskid=1
jobid=${SLURM_JOB_ID}
#fi

echo "jobid: ${jobid}"
echo "taskid: ${taskid}"

mkdir -p /nvmetmp/uvflag_mss_${jobid}_${taskid}

datadir=DATADIR
debug=DEBUG

function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
    exit "$1"
fi
}

track_task.py start --jobid="${jobid}" --taskid="${taskid}" --start_time="$(date +%s)"

list=()
while IFS= read -r line; do list+=("$line"); done < ${obsnum}

for obsnum in ${list[@]}
do
    cd "$datadir/${obsnum}" || exit 1
    metafits="$(ls -t ${obsnum}*metafits* | head -1)"
    #metafits="${obsnum}.metafits"

    cp -rf ./${obsnum}.ms /nvmetmp/uvflag_mss_${jobid}_${taskid}/

    if [[ -z $debug ]]
    then
        ms_flag_by_uvdist.py "/nvmetmp/uvflag_mss_${jobid}_${taskid}/${obsnum}.ms" DATA -a
    else
        ms_flag_by_uvdist.py "/nvmetmp/uvflag_mss_${jobid}_${taskid}/${obsnum}.ms" CORRECTED_DATA -a 
    fi

    #Flagging RFI for channel 69.
    #If CORRECTED_DATA column exist, it will automatically use it unless we specify otherwise.
    chan="$(pyhead.py -p CENTCHAN "$metafits" | awk '{print $3}')"
    echo $chan
    if [[ "$chan" -eq 69 ]]
    then
        flags=$(python /software/projects/mwasci/smantovanini/GLEAM-X-pipeline/gleam_x/bin/ms_flag_channels.py --auto /nvmetmp/uvflag_mss_${jobid}_${taskid}/${obsnum}.ms --window 55 --freq_scale --std --sigma 0.5 --noapply | awk 'END{print}' | grep -o -E '[0-9]+')
        echo Channels to be flagged: $flags.
        flagsubbands /nvmetmp/uvflag_mss_${jobid}_${taskid}/${obsnum}.ms 768 $flags
    fi
done

rm -rf ./${obsnum}.ms && cp -rf /nvmetmp/uvflag_mss_${jobid}_${taskid}/${obsnum}.ms ./
rm -rf /nvmetmp/uvflag_mss_${jobid}_${taskid}

track_task.py finish --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"

